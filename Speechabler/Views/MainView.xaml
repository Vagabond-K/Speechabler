<UserControl
    x:Class="Speechabler.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:vk="http://schemas.vagabond-k.com/winfx/2016/xaml"
    xmlns:local="clr-namespace:Speechabler"
    xmlns:model="clr-namespace:Speechabler.Models"
    xmlns:vm="clr-namespace:Speechabler.ViewModels"
    xmlns:v="clr-namespace:Speechabler.Views"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance Type=vm:MainViewModel}">
    <Grid x:Name="Root" Margin="3">
        <FrameworkElement.Resources>
            <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="HoverOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="PressedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="CheckedTrue">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="CheckedFalse">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="IndeterminateOn">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="IndeterminateOff">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="FocussedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="FocussedOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Border IsHitTestVisible="True" Background="#FF303030" CornerRadius="10">
                                <BulletDecorator x:Name="bulletDecorator" Margin="12">
                                    <BulletDecorator.Bullet>
                                        <Grid VerticalAlignment="Center">
                                            <Rectangle Height="28" Width="28" Margin="1" x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                                            <Rectangle Height="28" Width="28" Margin="1" x:Name="BackgroundOverlay" Opacity="0" Fill="{x:Null}" Stroke="{StaticResource HoverBrush}" StrokeThickness="2" />
                                            <Rectangle Height="32" Width="32" x:Name="PressedRectangle" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverBrush}" StrokeThickness="1" />
                                            <Path Height="20" Width="21" Margin="1,1,0,1.5" x:Name="CheckIcon" Opacity="0" Fill="White" Stretch="Fill" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" />
                                            <Rectangle Height="16" Width="20" x:Name="IndeterminateIcon" Opacity="0" Fill="White" />
                                            <Rectangle Height="28" Width="28" x:Name="DisabledVisualElement" Opacity="0" Fill="{StaticResource DisabledBackgroundBrush}" />
                                            <Rectangle Height="32" Width="32" x:Name="ContentFocusVisualElement" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" />
                                            <Rectangle Height="28" Width="28" x:Name="ShineRectangle" IsHitTestVisible="false" Opacity="1" Stroke="{x:Null}" StrokeThickness="1" Fill="{StaticResource ShineBrush}" Margin="2,2,2,2" />
                                        </Grid>
                                    </BulletDecorator.Bullet>
                                    <ContentPresenter RecognizesAccessKey="True" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                </BulletDecorator>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="IsThreeState" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="ThreeStateOn_BeginStoryboard" Storyboard="{StaticResource CheckedFalse}" />
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard x:Name="ThreeStateOff_BeginStoryboard" Storyboard="{StaticResource CheckedTrue}" />
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="{x:Null}" />
                                        <Condition Property="IsThreeState" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="ThreeStateOn1_BeginStoryboard" Storyboard="{StaticResource IndeterminateOn}" />
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard x:Name="ThreeStateOff1_BeginStoryboard" Storyboard="{StaticResource IndeterminateOff}" />
                                    </MultiTrigger.ExitActions>
                                    <Setter Property="Visibility" TargetName="CheckIcon" Value="Hidden" />
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource CheckedFalse}" x:Name="CheckedTrue_BeginStoryboard" />
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="CheckedTrue_BeginStoryboard1" Storyboard="{StaticResource CheckedTrue}" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Background" />
                                    <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Background" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                    <Setter Property="Opacity" TargetName="bulletDecorator" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="FontSize" Value="28"/>
            </Style>
            <ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
                <ControlTemplate.Resources>
                    <Storyboard x:Key="HoverOn">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="HoverOff">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="PressedOn">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="PressedOff">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="CheckedOn">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="CheckedOff">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="FocussedOn">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard x:Key="FocussedOff">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </ControlTemplate.Resources>
                <Border IsHitTestVisible="True" Background="#FF303030" CornerRadius="10">
                    <BulletDecorator Background="Transparent" x:Name="bulletDecorator" Margin="12">
                        <BulletDecorator.Bullet>
                            <Grid VerticalAlignment="Center">
                                <Ellipse Height="28" Margin="1" x:Name="Background" Width="28" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                                <Ellipse Height="28" Margin="1" x:Name="BackgroundOverlay" Width="28" StrokeThickness="2" Stroke="{StaticResource HoverBrush}" Opacity="0" />
                                <Ellipse Height="28" Margin="1" x:Name="PressedEllipse" Width="28" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource HoverBrush}" Opacity="0" />
                                <Ellipse Height="12" x:Name="CheckIcon" Width="12" Opacity="0" Fill="White" />
                                <Ellipse Height="28" x:Name="DisabledVisualElement" Width="28" Opacity="0" Fill="{StaticResource DisabledBackgroundBrush}" />
                                <Ellipse Height="32" x:Name="ContentFocusVisualElement" Width="32" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" />
                                <Ellipse Height="24" Margin="2,2,2,2" x:Name="ShineEllipse" Width="24" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{x:Null}" Fill="{StaticResource ShineBrush}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter RecognizesAccessKey="True" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </BulletDecorator>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Trigger.ExitActions>
                            <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard" />
                        </Trigger.ExitActions>
                        <Trigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard" />
                        </Trigger.EnterActions>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">

                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                        </Trigger.ExitActions>

                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">

                        <Trigger.ExitActions>
                            <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                        </Trigger.ExitActions>
                        <Trigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                        </Trigger.EnterActions>

                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">

                        <Trigger.ExitActions>
                            <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                        </Trigger.ExitActions>
                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                        </Trigger.EnterActions>

                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                        <Setter Property="Stroke" TargetName="Background" Value="{DynamicResource DisabledBorderBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        <Setter Property="Opacity" TargetName="bulletDecorator" Value="0.5" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="FontSize" Value="28"/>
            </Style>
        </FrameworkElement.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ItemsControl Grid.Column="1" Grid.RowSpan="3" DataContext="{Binding Messages}" ItemsSource="{Binding Settings.Messages}" Visibility="{Binding UseMessageButton, Converter={vk:BooleanToVisibilityConverter}}">
            <FrameworkElement.Resources>
                <ControlTemplate x:Key="MessageButton" TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)" RepeatBehavior="Forever" AutoReverse="True">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Background="#FF303030" CornerRadius="10"/>
                        <Border CornerRadius="10" BorderThickness="3" BorderBrush="{StaticResource ButtonNormalBorder}"/>
                        <Grid x:Name="HoverGrid" Opacity="0">
                            <Rectangle x:Name="HoverBorder" Fill="#30FFFFFF" RadiusX="10" RadiusY="10" Opacity="0"/>
                            <Rectangle RadiusX="10" RadiusY="10" StrokeThickness="3" Stroke="White"/>
                        </Grid>
                        <Border x:Name="PressedBorder" Background="#80000000" CornerRadius="10" Opacity="0" BorderThickness="3"/>
                        <Border CornerRadius="10" BorderThickness="3">
                            <Viewbox>
                                <Viewbox.Effect>
                                    <DropShadowEffect/>
                                </Viewbox.Effect>
                                <ContentPresenter 
                                    TextBlock.TextAlignment="Center"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                            </Viewbox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MessageHoverOn"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="MessageHoverOn" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </FrameworkElement.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="{Binding Settings.Rows}" Columns="{Binding Settings.Columns}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="3">
                        <Button
                            Visibility="{Binding ElementName=Root, Path=DataContext.IsEditMode, Converter={StaticResource BooleanToVisibilityInvertConverter}}"
                            Command="{Binding ElementName=Root, Path=DataContext.MessageClickCommand}"
                            CommandParameter="{Binding}"
                            Content="{Binding Title}"
                            Focusable="False"
                            Template="{StaticResource MessageButton}"/>
                        <Border
                            Visibility="{Binding ElementName=Root, Path=DataContext.IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                            CornerRadius="10" BorderThickness="3" Background="#80333333" BorderBrush="{StaticResource ButtonNormalBorder}">
                            <Grid TextBlock.Foreground="{StaticResource TextBrush}" Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="버튼 표시: " Margin="0,0,0,3"/>
                                <TextBox Grid.Row="1" Text="{Binding Title}" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>
                                <TextBlock Grid.Row="3" Text="음성 내용: " Margin="0,0,0,3"/>
                                <TextBox Grid.Row="4" Text="{Binding Message}" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"/>
                            </Grid>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <GroupBox Header="음성 재생 및 SMS 전송 방법" FontSize="16">
            <StackPanel Margin="3" IsEnabled="{Binding IsEditMode, Converter={vk:NegationConverter}}">
                <FrameworkElement.Resources>
                </FrameworkElement.Resources>
                <RadioButton Content="메시지 버튼" IsChecked="{Binding Messages.UseMessageButton}"/>
                <RadioButton Content="직접 입력" IsChecked="{Binding ManualInputMessage.UseInputMessage}"/>
            </StackPanel>
        </GroupBox>
        <GroupBox Grid.Row="1" Header="SMS 수신자" FontSize="16">
            <Grid>
                <Border Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityInvertConverter}}">
                    <TextBlock 
                        Visibility="{Binding SmsReceivers.Settings.Receivers.Count, Converter={StaticResource IsZeroToVisibilityConverter}}"
                        Margin="10"
                        Text="내용 편집 버튼을 클릭하여 SMS 수신자를 추가할 수 있습니다." 
                        TextAlignment="Center"
                        Foreground="Gray"
                        FontSize="18"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" TextWrapping="Wrap"/>
                </Border>
                <ScrollViewer x:Name="SmsReceiversView" DataContext="{Binding SmsReceivers}" VerticalScrollBarVisibility="Auto" Focusable="False">
                    <ItemsControl ItemsSource="{Binding Settings.Receivers}" Margin="3" Focusable="False">
                        <FrameworkElement.Resources>
                            <DataTemplate DataType="{x:Type model:SmsReceiver}">
                                <Border Background="#FF303030" Margin="3" CornerRadius="10">
                                    <Grid TextBlock.FontSize="28" Height="61">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox
                                            Grid.Column="1" 
                                            Visibility="{Binding ElementName=Root, Path=DataContext.IsEditMode, Converter={StaticResource BooleanToVisibilityInvertConverter}}"
                                            Content="{Binding Name}" 
                                            IsChecked="{Binding IsReceiver}"/>
                                        <Grid 
                                            Visibility="{Binding ElementName=Root, Path=DataContext.IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Grid.Column="1" TextBlock.FontSize="16" VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding Name}"/>
                                            <TextBlock Grid.Row="1" Text="{Binding PhoneNumber}"/>
                                        </Grid>
                                        <StackPanel 
                                            Visibility="{Binding ElementName=Root, Path=DataContext.IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Margin="8"
                                            Orientation="Horizontal">
                                            <Button 
                                                Command="{Binding ElementName=SmsReceiversView, Path=DataContext.EditReceiverCommand}" 
                                                CommandParameter="{Binding}"
                                                Content="&#xE70F;" FontSize="12" FontFamily="Segoe MDL2 Assets" Padding="8" VerticalAlignment="Center"/>
                                            <Button 
                                                Command="{Binding ElementName=SmsReceiversView, Path=DataContext.RemoveReceiverCommand}" 
                                                CommandParameter="{Binding}"
                                                Content="&#xE711;" FontSize="12" FontFamily="Segoe MDL2 Assets" Padding="8" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vm:NewSmsReceiver}">
                                <Button Command="{Binding ElementName=SmsReceiversView, Path=DataContext.AddReceiverCommand}" Content="추가" Padding="6" Margin="3"/>
                            </DataTemplate>
                        </FrameworkElement.Resources>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </GroupBox>
        <UniformGrid Grid.Row="2" Columns="1">
            <FrameworkElement.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="Padding" Value="16"/>
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </FrameworkElement.Resources>
            <Button Command="{Binding Messages.SetMatrixCommand}" IsEnabled="{Binding IsEditMode, Converter={StaticResource NegationConverter}}">
                <StackPanel>
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="24">&#xE80A;</TextBlock>
                    <TextBlock Margin="12,0,0,0">메시지 격자 설정</TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding SmsReceivers.EditSmsApiSettingCommand}" IsEnabled="{Binding IsEditMode, Converter={StaticResource NegationConverter}}">
                <StackPanel>
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="24">&#xF716;</TextBlock>
                    <TextBlock Margin="12,0,0,0">SMS API 설정</TextBlock>
                </StackPanel>
            </Button>
            <Button Command="{Binding EditContentsCommand}" Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityInvertConverter}}">
                <StackPanel>
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="24">&#xE70F;</TextBlock>
                    <TextBlock Margin="12,0,0,0">내용 편집</TextBlock>
                </StackPanel>
            </Button>
            <Grid Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding SaveContentsCommand}">
                    <StackPanel>
                        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="24">&#xE792;</TextBlock>
                        <TextBlock Margin="12,0,0,0">내용 저장</TextBlock>
                    </StackPanel>
                </Button>
                <Button Grid.Column="1" Command="{Binding CancelEditContentsCommand}">
                    <StackPanel>
                        <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="24">&#xF78A;</TextBlock>
                        <TextBlock Margin="12,0,0,0">편집 취소</TextBlock>
                    </StackPanel>
                </Button>
            </Grid>
        </UniformGrid>
        <v:ManualInputMessageView Grid.Column="1" Grid.RowSpan="3" DataContext="{Binding ManualInputMessage}" Visibility="{Binding UseInputMessage, Converter={vk:BooleanToVisibilityConverter}}"/>

        <Grid Grid.ColumnSpan="2" Grid.RowSpan="3" IsHitTestVisible="True" Background="#80000000"
              Visibility="{Binding SpeechUtil.IsSpeeching, Converter={vk:BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="1">
                <Grid>
                    <Ellipse Fill="Black" Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"/>
                    <Ellipse Fill="Green" Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" Opacity="{Binding SpeechUtil.AudioVisual}"/>
                    <Grid Margin="5">
                        <TextBlock Text="&#xE995;" FontFamily="Segoe MDL2 Assets" Foreground="White"/>
                    </Grid>
                </Grid>
            </Viewbox>
            <Button Grid.Row="2" Command="{Binding SpeechUtil.CancelCommand}" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Margin="3" Padding="16" Focusable="False" HorizontalContentAlignment="Left" FontSize="16">
                <StackPanel Orientation="Horizontal">
                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="24">&#xF78A;</TextBlock>
                    <TextBlock Margin="12,0,0,0">취소</TextBlock>
                </StackPanel>
            </Button>
        </Grid>
    </Grid>
</UserControl>
